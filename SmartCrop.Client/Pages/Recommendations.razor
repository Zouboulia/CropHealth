@page "/recommendations"
@inject HttpClient Http
@rendermode InteractiveWebAssembly

<h3>Crop Recommendations</h3>

<input type="text" @bind="city" @bind:event="oninput" placeholder="Enter a city where your crops are located (e.g., Dublin)" />
<button @onclick="GetRecommendationsAsync">Get Recommendations</button>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (recommendations == null)
{
    <p>Enter a city to get recommendations.</p>
}
else if (recommendations.Count == 0)
{
    <p>No recommendations available for <strong>@city</strong>.</p>
}
else
{
    <p>Showing recommendations for <strong>@city</strong>:</p>
    <ul>
        @foreach (var rec in recommendations)
        {
            <li>
                <strong>@rec.RecommendationText</strong><br />
                Crop ID: @rec.CropId<br />
                Priority: @rec.Priority<br />
                Date: @rec.DateIssued.ToShortDateString()<br />
                @if (!string.IsNullOrWhiteSpace(rec.WeatherSummary))
                {
                    <em>Weather: @rec.WeatherSummary</em>
                }
            </li>
        }
    </ul>
}

@code {
    private string city = string.Empty;
    private List<Recommendation>? recommendations;
    private bool isLoading = false;

    private async Task GetRecommendationsAsync()
    {
        if (string.IsNullOrWhiteSpace(city))
            return;

        isLoading = true;

        try
        {
            var url = $"http://localhost:5204/api/recommendation/crop?city={city}";
            recommendations = await Http.GetFromJsonAsync<List<Recommendation>>(url);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error fetching recommendations: " + ex.Message);
            recommendations = new List<Recommendation>();
        }

        isLoading = false;
    }

    public class Recommendation
    {
        public int RecommendationId { get; set; }
        public int CropId { get; set; }
        public string RecommendationText { get; set; }
        public DateTime DateIssued { get; set; }
        public string Priority { get; set; }
        public string? WeatherSummary { get; set; }
    }
}
